import gql from 'graphql-tag';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  DateTime: string;
  Number: any;
  QueryArgument: any;
};

export type AssetCriteriaInput = {
  /** Narrows the query results to only elements that have been archived. */
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the assets’ files’ last-modified dates. */
  dateModified?: InputMaybe<Scalars['String']>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument. */
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the assets’ filenames. */
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the folders the assets belong to, per the folders’ IDs. */
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the assets’ image heights. */
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  /** Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`. */
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the assets’ file kinds. */
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the assets’ file sizes (in bytes). */
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the user the assets were uploaded by, per the user’s ID. */
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ handles. */
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs. */
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the assets’ image widths. */
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** A list of transform handles to preload. */
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all assets. */
export type AssetInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the asset file was last modified. */
  dateModified?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The file extension for the asset file. */
  extension?: Maybe<Scalars['String']>;
  /** The filename of the asset file. */
  filename?: Maybe<Scalars['String']>;
  /** The focal point represented as an array with `x` and `y` keys, or null if it's not an image. */
  focalPoint?: Maybe<Array<Maybe<Scalars['Float']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId?: Maybe<Scalars['Int']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint?: Maybe<Scalars['Boolean']>;
  /** The height in pixels or null if it's not an image. */
  height?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** An `<img>` tag based on this asset. */
  img?: Maybe<Scalars['String']>;
  /** The file kind. */
  kind?: Maybe<Scalars['String']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<AssetInterface>;
  /** The asset's path in the volume. */
  path?: Maybe<Scalars['String']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The file size in bytes. */
  size?: Maybe<Scalars['String']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The user who first added this asset (if known). */
  uploader?: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId?: Maybe<Scalars['Int']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url?: Maybe<Scalars['String']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId?: Maybe<Scalars['Int']>;
  /** The width in pixels or null if it's not an image. */
  width?: Maybe<Scalars['Int']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterface_CountArgs = {
  field: Scalars['String'];
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceHeightArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceNextArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfacePrevArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceSrcsetArgs = {
  sizes: Array<Scalars['String']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUploaderArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUrlArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceWidthArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type CategoryCriteriaInput = {
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that have been archived. */
  archived?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf?: InputMaybe<Scalars['Int']>;
  /** Whether to only return categories that the user has permission to edit. */
  editable?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument. */
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the category groups the categories belong to per the group’s handles. */
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the category groups the categories belong to, per the groups’ IDs. */
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level?: InputMaybe<Scalars['Int']>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore?: InputMaybe<Scalars['Int']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The category’s children. */
  children?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The handle of the group that contains the category. */
  groupHandle?: Maybe<Scalars['String']>;
  /** The ID of the group that contains the category. */
  groupId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent?: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterface_CountArgs = {
  field: Scalars['String'];
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceLocalizedArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceNextArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceParentArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfacePrevArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Comment = CommentInterface & ElementInterface & {
  __typename?: 'Comment';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The comment’s children. Accepts the same arguments as the `comments` query. */
  children?: Maybe<Array<Maybe<CommentInterface>>>;
  /** The actual comment text. */
  comment?: Maybe<Scalars['String']>;
  /** The comment's post date. */
  commentDate?: Maybe<Scalars['DateTime']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The number of downvotes for this comment. */
  downvotes?: Maybe<Scalars['Int']>;
  /** The email for the comment's author. */
  email?: Maybe<Scalars['String']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The number of flags for this comment. */
  flags?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  linked?: Maybe<Scalars['String']>;
  /** The full name for the comment's author. */
  name?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the comment. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The comment’s parent. */
  parent?: Maybe<CommentInterface>;
  quote?: Maybe<Scalars['String']>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The number of upvotes for this comment. */
  upvotes?: Maybe<Scalars['Int']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The url the comment was made on. */
  url?: Maybe<Scalars['String']>;
  /** The ID of the author of this comment. */
  userId?: Maybe<Scalars['Int']>;
  /** The number of total votes for this comment. */
  votes?: Maybe<Scalars['Int']>;
};


export type Comment_CountArgs = {
  field: Scalars['String'];
};


export type CommentChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  comment?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  commentDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  userId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all comments. */
export type CommentInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The comment’s children. Accepts the same arguments as the `comments` query. */
  children?: Maybe<Array<Maybe<CommentInterface>>>;
  /** The actual comment text. */
  comment?: Maybe<Scalars['String']>;
  /** The comment's post date. */
  commentDate?: Maybe<Scalars['DateTime']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The number of downvotes for this comment. */
  downvotes?: Maybe<Scalars['Int']>;
  /** The email for the comment's author. */
  email?: Maybe<Scalars['String']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The number of flags for this comment. */
  flags?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The full name for the comment's author. */
  name?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the comment. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The comment’s parent. */
  parent?: Maybe<CommentInterface>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The number of upvotes for this comment. */
  upvotes?: Maybe<Scalars['Int']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The url the comment was made on. */
  url?: Maybe<Scalars['String']>;
  /** The ID of the author of this comment. */
  userId?: Maybe<Scalars['Int']>;
  /** The number of total votes for this comment. */
  votes?: Maybe<Scalars['Int']>;
};


/** This is the interface implemented by all comments. */
export type CommentInterface_CountArgs = {
  field: Scalars['String'];
};


/** This is the interface implemented by all comments. */
export type CommentInterfaceChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  comment?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  commentDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  userId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Element = ElementInterface & {
  __typename?: 'Element';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type Element_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all elements. */
export type ElementInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


/** This is the interface implemented by all elements. */
export type ElementInterface_CountArgs = {
  field: Scalars['String'];
};

export type EntryCriteriaInput = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results to only entries that were posted on or after a certain date. */
  after?: InputMaybe<Scalars['String']>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that have been archived. */
  archived?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the user group the entries’ authors belong to. */
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs. */
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the entries’ authors. */
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only entries that were posted before a certain date. */
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf?: InputMaybe<Scalars['Int']>;
  /** The drafts’ creator ID */
  draftCreator?: InputMaybe<Scalars['Int']>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts. */
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  /** Whether draft elements should be returned. */
  drafts?: InputMaybe<Scalars['Boolean']>;
  /** Whether to only return entries that the user has permission to edit. */
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument. */
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the entries’ expiry dates. */
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level?: InputMaybe<Scalars['Int']>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results based on the entries’ post dates. */
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  /** Whether provisional drafts should be returned. */
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** The revisions’ creator ID */
  revisionCreator?: InputMaybe<Scalars['Int']>;
  /** The ID of the revision to return (from the `revisions` table) */
  revisionId?: InputMaybe<Scalars['Int']>;
  /** The source element ID that revisions should be returned for */
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  /** Whether revision elements should be returned. */
  revisions?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Narrows the query results based on the section handles the entries belong to. */
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the sections the entries belong to, per the sections’ IDs. */
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the entries’ entry type handles. */
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the entries’ entry types, per the types’ IDs. */
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterface_CountArgs = {
  field: Scalars['String'];
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfacePrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all global sets. */
export type GlobalSetInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The handle of the global set. */
  handle?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The name of the global set. */
  name?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


/** This is the interface implemented by all global sets. */
export type GlobalSetInterface_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all matrix blocks. */
export type MatrixBlockInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


/** This is the interface implemented by all matrix blocks. */
export type MatrixBlockInterface_CountArgs = {
  field: Scalars['String'];
};

export type Mutation = {
  __typename?: 'Mutation';
  ping?: Maybe<Scalars['String']>;
};

export type Query = {
  __typename?: 'Query';
  /** This query is used to query for a single asset. */
  asset?: Maybe<AssetInterface>;
  /** This query is used to return the number of assets. */
  assetCount: Scalars['Int'];
  /** This query is used to query for assets. */
  assets?: Maybe<Array<Maybe<AssetInterface>>>;
  /** This query is used to query for categories. */
  categories?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** This query is used to query for a single category. */
  category?: Maybe<CategoryInterface>;
  /** This query is used to return the number of categories. */
  categoryCount: Scalars['Int'];
  /** This query is used to query for comments. */
  comments?: Maybe<Array<Maybe<CommentInterface>>>;
  /** This query is used to query for entries. */
  entries?: Maybe<Array<Maybe<EntryInterface>>>;
  /** This query is used to query for a single entry. */
  entry?: Maybe<EntryInterface>;
  /** This query is used to return the number of entries. */
  entryCount: Scalars['Int'];
  /** This query is used to query for a single global set. */
  globalSet?: Maybe<GlobalSetInterface>;
  /** This query is used to query for global sets. */
  globalSets?: Maybe<Array<Maybe<GlobalSetInterface>>>;
  ping?: Maybe<Scalars['String']>;
  /** This query is used to query for a single user. */
  user?: Maybe<UserInterface>;
  /** This query is used to return the number of users. */
  userCount: Scalars['Int'];
  /** This query is used to query for users. */
  users?: Maybe<Array<Maybe<UserInterface>>>;
};


export type QueryAssetArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type QueryAssetCountArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type QueryAssetsArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type QueryCategoriesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type QueryCategoryArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type QueryCategoryCountArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type QueryCommentsArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  comment?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  commentDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  userId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type QueryEntriesArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type QueryEntryArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type QueryEntryCountArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type QueryGlobalSetArgs = {
  activeCampaignDefaultListId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activecampaign?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  address?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  archived?: InputMaybe<Scalars['Boolean']>;
  checkmarkText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  confirmationMessage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  disclaimerText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  eventFormText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  handle?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  heartNavigation?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaNavigation?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  subjectMessage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type QueryGlobalSetsArgs = {
  activeCampaignDefaultListId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activecampaign?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  address?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  archived?: InputMaybe<Scalars['Boolean']>;
  checkmarkText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  confirmationMessage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  disclaimerText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  eventFormText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  handle?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  heartNavigation?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaNavigation?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  subjectMessage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type QueryUserArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type QueryUserCountArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type QueryUsersArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all Super Table blocks. */
export type SuperTableBlockInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the Super Table block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The ID of the Super Table block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


/** This is the interface implemented by all Super Table blocks. */
export type SuperTableBlockInterface_CountArgs = {
  field: Scalars['String'];
};

export type TagCriteriaInput = {
  /** Narrows the query results to only elements that have been archived. */
  archived?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument. */
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the tag groups the tags belong to per the group’s handles. */
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the tag groups the tags belong to, per the groups’ IDs. */
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type User = ElementInterface & UserInterface & {
  __typename?: 'User';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The user's email. */
  email?: Maybe<Scalars['String']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The user's first name. */
  firstName?: Maybe<Scalars['String']>;
  /** The user's first name or username. */
  friendlyName?: Maybe<Scalars['String']>;
  /** The user's full name. */
  fullName?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The user's last name. */
  lastName?: Maybe<Scalars['String']>;
  /** The user's full name or username. */
  name?: Maybe<Scalars['String']>;
  /** The user’s preferences. */
  preferences?: Maybe<Scalars['String']>;
  /** The user’s preferred language. */
  preferredLanguage?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The username. */
  username?: Maybe<Scalars['String']>;
};


export type User_CountArgs = {
  field: Scalars['String'];
};

export type UserCriteriaInput = {
  /** Narrows the query results to only elements that have been archived. */
  archived?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the users’ email addresses. */
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument. */
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the users’ first names. */
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the user group the users belong to. */
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the user group the users belong to, per the groups’ IDs. */
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only users that have (or don’t have) a user photo. */
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the users’ last names. */
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ statuses. */
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to only elements that have been soft-deleted. */
  trashed?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the users’ usernames. */
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all users. */
export type UserInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The user's email. */
  email?: Maybe<Scalars['String']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The user's first name. */
  firstName?: Maybe<Scalars['String']>;
  /** The user's first name or username. */
  friendlyName?: Maybe<Scalars['String']>;
  /** The user's full name. */
  fullName?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The user's last name. */
  lastName?: Maybe<Scalars['String']>;
  /** The user's full name or username. */
  name?: Maybe<Scalars['String']>;
  /** The user’s preferences. */
  preferences?: Maybe<Scalars['String']>;
  /** The user’s preferred language. */
  preferredLanguage?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The username. */
  username?: Maybe<Scalars['String']>;
};


/** This is the interface implemented by all users. */
export type UserInterface_CountArgs = {
  field: Scalars['String'];
};

export type BlockContent_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'blockContent_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the Super Table block. */
  ownerId?: Maybe<Scalars['Int']>;
  peopleGroups?: Maybe<Array<Maybe<PeopleGroups_MatrixField>>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The ID of the Super Table block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type BlockContent_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type BlockContent_BlockTypePeopleGroupsArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type BlockContent_SuperTableField = BlockContent_BlockType;

export type ByDate_TableRow = {
  __typename?: 'byDate_TableRow';
  col1?: Maybe<Scalars['String']>;
  col2?: Maybe<Scalars['DateTime']>;
  col4?: Maybe<Scalars['Boolean']>;
  date?: Maybe<Scalars['DateTime']>;
  operation?: Maybe<Scalars['String']>;
  today?: Maybe<Scalars['Boolean']>;
};

export type Column1_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'column1_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  className?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  linkItem?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the Super Table block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The ID of the Super Table block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type Column1_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Column1_SuperTableField = Column1_BlockType;

export type Column2_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'column2_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  className?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  linkItem?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the Super Table block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The ID of the Super Table block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type Column2_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Column2_SuperTableField = Column2_BlockType;

export type Column3_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'column3_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  className?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  linkItem?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the Super Table block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The ID of the Super Table block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type Column3_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Column3_SuperTableField = Column3_BlockType;

export type ContentBlocks_MatrixField = ContentBlocks_AccordionBlock_BlockType | ContentBlocks_Button_BlockType | ContentBlocks_Donate_BlockType | ContentBlocks_EventForm_BlockType | ContentBlocks_HorizontalRule_BlockType | ContentBlocks_ImageText_BlockType | ContentBlocks_LanguageButtonsBlock_BlockType | ContentBlocks_LatestPublications_BlockType | ContentBlocks_LogoRiderBlock_BlockType | ContentBlocks_NextHappeningsBlock_BlockType | ContentBlocks_PartnersBlock_BlockType | ContentBlocks_PeopleBlockWithLabel_BlockType | ContentBlocks_PeopleWithText_BlockType | ContentBlocks_Publications_BlockType | ContentBlocks_RelatedEventsBlock_BlockType | ContentBlocks_RelatedPublicationsBlock_BlockType | ContentBlocks_RoadmapBlock_BlockType | ContentBlocks_Script_BlockType | ContentBlocks_SlackBlock_BlockType | ContentBlocks_SliderGallery_BlockType | ContentBlocks_Sources_BlockType | ContentBlocks_StandardDescriptionBlock_BlockType | ContentBlocks_TeaserBlock_BlockType | ContentBlocks_TextBlockWithLabel_BlockType | ContentBlocks_Text_BlockType | ContentBlocks_TopicSubscribe_BlockType | ContentBlocks_TopicsBlock_BlockType | ContentBlocks_TwoColumnsWithImage_BlockType | ContentBlocks_YoutubePlaylist_BlockType | ContentBlocks_YoutubeVideoBlock_BlockType;

export type ContentBlocks_AccordionBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_accordionBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  fullWidth?: Maybe<Scalars['Boolean']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_AccordionBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_Button_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_button_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  buttonSize?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  isFull?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  linkField?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_Button_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_Button_BlockTypeButtonSizeArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_Donate_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_donate_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  amount?: Maybe<Scalars['Number']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_Donate_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_EventForm_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_eventForm_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  buttonText?: Maybe<Scalars['String']>;
  campaignId?: Maybe<Scalars['Number']>;
  checkmarkText?: Maybe<Scalars['String']>;
  confirmationMessage?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  enableConfirmation?: Maybe<Scalars['Boolean']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  eventFormText?: Maybe<Scalars['String']>;
  extraFields?: Maybe<Array<Maybe<ExtraFields_TableRow>>>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  image?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  subjectMessage?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_EventForm_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_EventForm_BlockTypeImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_HorizontalRule_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_horizontalRule_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  endOfBlock?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_HorizontalRule_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_ImageText_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_imageText_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  color?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  image?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_ImageText_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_ImageText_BlockTypeColorArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};


export type ContentBlocks_ImageText_BlockTypeImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_LanguageButtonsBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_languageButtonsBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_LanguageButtonsBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_LatestPublications_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_latestPublications_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_LatestPublications_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_LogoRiderBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_logoRiderBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  linkText?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_LogoRiderBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_NextHappeningsBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_nextHappeningsBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_NextHappeningsBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_PartnersBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_partnersBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  images?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_PartnersBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_PartnersBlock_BlockTypeImagesArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_PeopleBlockWithLabel_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_peopleBlockWithLabel_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  blockContent?: Maybe<Array<Maybe<BlockContent_SuperTableField>>>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_PeopleBlockWithLabel_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_PeopleBlockWithLabel_BlockTypeBlockContentArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_PeopleWithText_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_peopleWithText_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  lead?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  people?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  textBlocks?: Maybe<Array<Maybe<TextBlocks_TableRow>>>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_PeopleWithText_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_PeopleWithText_BlockTypePeopleArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_Publications_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_publications_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  publications?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_Publications_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_Publications_BlockTypePublicationsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_RelatedEventsBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_relatedEventsBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  byDate?: Maybe<Array<Maybe<ByDate_TableRow>>>;
  conditional?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entriesNumber?: Maybe<Scalars['Number']>;
  eventsCategories?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  topic?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_RelatedEventsBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_RelatedEventsBlock_BlockTypeEventsCategoriesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type ContentBlocks_RelatedEventsBlock_BlockTypeTopicArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_RelatedPublicationsBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_relatedPublicationsBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  author?: Maybe<Array<Maybe<EntryInterface>>>;
  byDate?: Maybe<Array<Maybe<ByDate_TableRow>>>;
  conditional?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entriesNumber?: Maybe<Scalars['Number']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  publicationTypeCategories?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  topic?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_RelatedPublicationsBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_RelatedPublicationsBlock_BlockTypeAuthorArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type ContentBlocks_RelatedPublicationsBlock_BlockTypePublicationTypeCategoriesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type ContentBlocks_RelatedPublicationsBlock_BlockTypeTopicArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_RoadmapBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_roadmapBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  image?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  steps?: Maybe<Array<Maybe<Steps_TableRow>>>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_RoadmapBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_RoadmapBlock_BlockTypeImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_Script_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_script_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  scriptContent?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  withFrame?: Maybe<Scalars['Boolean']>;
};


export type ContentBlocks_Script_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_SlackBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_slackBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  channel?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  fullWidth?: Maybe<Scalars['Boolean']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_SlackBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_SliderGallery_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_sliderGallery_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  isFull?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  slides?: Maybe<Array<Maybe<Slides_SuperTableField>>>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_SliderGallery_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_SliderGallery_BlockTypeSlidesArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_Sources_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_sources_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  sources?: Maybe<Array<Maybe<Sources_SuperTableField>>>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_Sources_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_Sources_BlockTypeSourcesArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_StandardDescriptionBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_standardDescriptionBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entry?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_StandardDescriptionBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_StandardDescriptionBlock_BlockTypeEntryArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_TeaserBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_teaserBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  teaserImage?: Maybe<Array<Maybe<AssetInterface>>>;
  textContent?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_TeaserBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_TeaserBlock_BlockTypeTeaserImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_TextBlockWithLabel_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_textBlockWithLabel_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  textContent?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_TextBlockWithLabel_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_Text_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_text_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  isFull?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_Text_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_TopicSubscribe_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_topicSubscribe_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  listId?: Maybe<Scalars['Number']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_TopicSubscribe_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_TopicsBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_topicsBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  heading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  image?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  lead?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  topics?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_TopicsBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_TopicsBlock_BlockTypeImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type ContentBlocks_TopicsBlock_BlockTypeTopicsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_TwoColumnsWithImage_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_twoColumnsWithImage_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  image?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_TwoColumnsWithImage_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_TwoColumnsWithImage_BlockTypeImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_YoutubePlaylist_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_youtubePlaylist_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  playlistId?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type ContentBlocks_YoutubePlaylist_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_YoutubeVideoBlock_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contentBlocks_youtubeVideoBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  isFull?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  videoAspectRatio?: Maybe<Scalars['String']>;
  videoCaption?: Maybe<Scalars['String']>;
  videoId?: Maybe<Scalars['String']>;
};


export type ContentBlocks_YoutubeVideoBlock_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type ContentBlocks_YoutubeVideoBlock_BlockTypeVideoAspectRatioArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type EnupalMultiplePlans_SubscriptionPlan_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'enupalMultiplePlans_subscriptionPlan_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  customLabel?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  default?: Maybe<Scalars['Boolean']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  selectPlan?: Maybe<Scalars['String']>;
  setupFee?: Maybe<Scalars['Number']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type EnupalMultiplePlans_SubscriptionPlan_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type EnupalMultiplePlans_SubscriptionPlan_BlockTypeSelectPlanArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type EnupalStripeBasicFields_Checkboxes_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'enupalStripeBasicFields_checkboxes_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  fieldHandle?: Maybe<Scalars['String']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  label?: Maybe<Scalars['String']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  options?: Maybe<Array<Maybe<Options_TableRow>>>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  required?: Maybe<Scalars['Boolean']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type EnupalStripeBasicFields_Checkboxes_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type EnupalStripeBasicFields_Dropdown_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'enupalStripeBasicFields_dropdown_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  fieldHandle?: Maybe<Scalars['String']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  label?: Maybe<Scalars['String']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  options?: Maybe<Array<Maybe<Options_TableRow>>>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  required?: Maybe<Scalars['Boolean']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type EnupalStripeBasicFields_Dropdown_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type EnupalStripeBasicFields_Hidden_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'enupalStripeBasicFields_hidden_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  hiddenValue?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  label?: Maybe<Scalars['String']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type EnupalStripeBasicFields_Hidden_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type EnupalStripeBasicFields_Number_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'enupalStripeBasicFields_number_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  fieldHandle?: Maybe<Scalars['String']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  label?: Maybe<Scalars['String']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  maxValue?: Maybe<Scalars['Number']>;
  minValue?: Maybe<Scalars['Number']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  required?: Maybe<Scalars['Boolean']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type EnupalStripeBasicFields_Number_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type EnupalStripeBasicFields_Paragraph_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'enupalStripeBasicFields_paragraph_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  fieldHandle?: Maybe<Scalars['String']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  initialRows?: Maybe<Scalars['Number']>;
  label?: Maybe<Scalars['String']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  placeholder?: Maybe<Scalars['String']>;
  required?: Maybe<Scalars['Boolean']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type EnupalStripeBasicFields_Paragraph_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type EnupalStripeBasicFields_RadioButtons_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'enupalStripeBasicFields_radioButtons_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  fieldHandle?: Maybe<Scalars['String']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  label?: Maybe<Scalars['String']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  options?: Maybe<Array<Maybe<Options_TableRow>>>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  required?: Maybe<Scalars['Boolean']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type EnupalStripeBasicFields_RadioButtons_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type EnupalStripeBasicFields_SingleLine_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'enupalStripeBasicFields_singleLine_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  fieldHandle?: Maybe<Scalars['String']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  label?: Maybe<Scalars['String']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  placeholder?: Maybe<Scalars['String']>;
  required?: Maybe<Scalars['Boolean']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type EnupalStripeBasicFields_SingleLine_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Events_Events_Entry = ElementInterface & EntryInterface & {
  __typename?: 'events_events_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  contentBlocks?: Maybe<Array<Maybe<ContentBlocks_MatrixField>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  dateEnd?: Maybe<Scalars['DateTime']>;
  dateStart?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entryImage?: Maybe<Array<Maybe<AssetInterface>>>;
  entryLead?: Maybe<Scalars['String']>;
  eventCategories?: Maybe<Array<Maybe<CategoryInterface>>>;
  eventTopic?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  location?: Maybe<Scalars['String']>;
  locationLink?: Maybe<Scalars['String']>;
  metaDescription?: Maybe<Scalars['String']>;
  metaKeywords?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  numberOfParticipants?: Maybe<Scalars['Number']>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  participantsCustomText?: Maybe<Scalars['String']>;
  peopleEntries?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  relatedEvents?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Events_Events_Entry_CountArgs = {
  field: Scalars['String'];
};


export type Events_Events_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryContentBlocksArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Events_Events_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryEntryImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Events_Events_EntryEventCategoriesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryEventTopicArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryPeopleEntriesArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryRelatedEventsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Events_Events_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Eventskategorien_Category = CategoryInterface & ElementInterface & {
  __typename?: 'eventskategorien_Category';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The category’s children. */
  children?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  faIcon?: Maybe<Scalars['String']>;
  /** The handle of the group that contains the category. */
  groupHandle?: Maybe<Scalars['String']>;
  /** The ID of the group that contains the category. */
  groupId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent?: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Eventskategorien_Category_CountArgs = {
  field: Scalars['String'];
};


export type Eventskategorien_CategoryChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Eventskategorien_CategoryLocalizedArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Eventskategorien_CategoryNextArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Eventskategorien_CategoryParentArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Eventskategorien_CategoryPrevArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ExtraFields_TableRow = {
  __typename?: 'extraFields_TableRow';
  col1?: Maybe<Scalars['String']>;
  col2?: Maybe<Scalars['String']>;
  col3?: Maybe<Scalars['String']>;
  col4?: Maybe<Scalars['Boolean']>;
  col5?: Maybe<Scalars['String']>;
  key?: Maybe<Scalars['String']>;
  placeholder?: Maybe<Scalars['String']>;
  required?: Maybe<Scalars['Boolean']>;
  type?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

export type Files_Asset = AssetInterface & ElementInterface & {
  __typename?: 'files_Asset';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  caption?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the asset file was last modified. */
  dateModified?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The file extension for the asset file. */
  extension?: Maybe<Scalars['String']>;
  /** The filename of the asset file. */
  filename?: Maybe<Scalars['String']>;
  /** The focal point represented as an array with `x` and `y` keys, or null if it's not an image. */
  focalPoint?: Maybe<Array<Maybe<Scalars['Float']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId?: Maybe<Scalars['Int']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint?: Maybe<Scalars['Boolean']>;
  /** The height in pixels or null if it's not an image. */
  height?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** An `<img>` tag based on this asset. */
  img?: Maybe<Scalars['String']>;
  /** The file kind. */
  kind?: Maybe<Scalars['String']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  lightbox?: Maybe<Scalars['Boolean']>;
  linkto?: Maybe<Scalars['String']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<AssetInterface>;
  /** The asset's path in the volume. */
  path?: Maybe<Scalars['String']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The file size in bytes. */
  size?: Maybe<Scalars['String']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  source?: Maybe<Scalars['String']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The user who first added this asset (if known). */
  uploader?: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId?: Maybe<Scalars['Int']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url?: Maybe<Scalars['String']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId?: Maybe<Scalars['Int']>;
  /** The width in pixels or null if it's not an image. */
  width?: Maybe<Scalars['Int']>;
};


export type Files_Asset_CountArgs = {
  field: Scalars['String'];
};


export type Files_AssetHeightArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};


export type Files_AssetNextArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Files_AssetPrevArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Files_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']>;
};


export type Files_AssetUploaderArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Files_AssetUrlArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};


export type Files_AssetWidthArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type FooterNavigation_MatrixField = FooterNavigation_Item_BlockType;

export type FooterNavigation_Item_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'footerNavigation_item_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  linkItem?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type FooterNavigation_Item_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type GroupEntries_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'groupEntries_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entrySpecificFunction?: Maybe<Scalars['String']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the Super Table block. */
  ownerId?: Maybe<Scalars['Int']>;
  personEntry?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  showBio?: Maybe<Scalars['Boolean']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The ID of the Super Table block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type GroupEntries_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type GroupEntries_BlockTypePersonEntryArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type GroupEntries_SuperTableField = GroupEntries_BlockType;

export type Home_Home_Entry = ElementInterface & EntryInterface & {
  __typename?: 'home_home_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  activateBubble?: Maybe<Scalars['Boolean']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  bubbleText?: Maybe<Scalars['String']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  contentBlocks?: Maybe<Array<Maybe<ContentBlocks_MatrixField>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaKeywords?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  pageTitle?: Maybe<Scalars['String']>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  sliderGallery?: Maybe<Array<Maybe<SliderGallery_MatrixField>>>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  target?: Maybe<Scalars['String']>;
  textContent?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
  webLink?: Maybe<Scalars['String']>;
};


export type Home_Home_Entry_CountArgs = {
  field: Scalars['String'];
};


export type Home_Home_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Home_Home_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Home_Home_EntryContentBlocksArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Home_Home_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Home_Home_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Home_Home_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Home_Home_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Home_Home_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Home_Home_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Home_Home_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Home_Home_EntrySliderGalleryArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Home_Home_EntryTargetArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type LogoRider_MatrixField = LogoRider_Category_BlockType;

export type LogoRider_Category_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'logoRider_category_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  categoryTitle?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  image?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  showMoreText?: Maybe<Scalars['String']>;
  showMoreUrl?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type LogoRider_Category_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type LogoRider_Category_BlockTypeImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type MainMenu_MatrixField = MainMenu_Item_BlockType;

export type MainMenu_Item_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'mainMenu_item_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  column1?: Maybe<Array<Maybe<Column1_SuperTableField>>>;
  column2?: Maybe<Array<Maybe<Column2_SuperTableField>>>;
  column3?: Maybe<Array<Maybe<Column3_SuperTableField>>>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  linkItem?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type MainMenu_Item_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type MainMenu_Item_BlockTypeColumn1Args = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type MainMenu_Item_BlockTypeColumn2Args = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type MainMenu_Item_BlockTypeColumn3Args = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type MoreInfo_Row_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'moreInfo_row_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  titleCol?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type MoreInfo_Row_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Options_TableRow = {
  __typename?: 'options_TableRow';
  col1?: Maybe<Scalars['String']>;
  col2?: Maybe<Scalars['String']>;
  optionLabel?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

export type Pages_Contact_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_contact_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entryContent?: Maybe<Scalars['String']>;
  entryImage?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaKeywords?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Pages_Contact_Entry_CountArgs = {
  field: Scalars['String'];
};


export type Pages_Contact_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Contact_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Contact_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Contact_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Contact_EntryEntryImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Pages_Contact_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Contact_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Contact_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Contact_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Contact_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Default_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_default_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  contentBlocks?: Maybe<Array<Maybe<ContentBlocks_MatrixField>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entryImage?: Maybe<Array<Maybe<AssetInterface>>>;
  entryLeadRedactor?: Maybe<Scalars['String']>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaKeywords?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Pages_Default_Entry_CountArgs = {
  field: Scalars['String'];
};


export type Pages_Default_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Default_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Default_EntryContentBlocksArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Pages_Default_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Default_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Default_EntryEntryImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Pages_Default_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Default_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Default_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Default_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Default_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Events_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_events_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  contentBlocks?: Maybe<Array<Maybe<ContentBlocks_MatrixField>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaKeywords?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Pages_Events_Entry_CountArgs = {
  field: Scalars['String'];
};


export type Pages_Events_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Events_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Events_EntryContentBlocksArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Pages_Events_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Events_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Events_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Events_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Events_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Events_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Events_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Publications_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_publications_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaKeywords?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Pages_Publications_Entry_CountArgs = {
  field: Scalars['String'];
};


export type Pages_Publications_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Publications_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Publications_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Publications_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Publications_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Publications_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Publications_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Publications_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Publications_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Topics_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_topics_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  contentBlocks?: Maybe<Array<Maybe<ContentBlocks_MatrixField>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaKeywords?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Pages_Topics_Entry_CountArgs = {
  field: Scalars['String'];
};


export type Pages_Topics_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Topics_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Topics_EntryContentBlocksArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Pages_Topics_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Topics_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Topics_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Topics_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Topics_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Topics_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Pages_Topics_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type PeopleGroups_MatrixField = PeopleGroups_PeopleGroupSmall_BlockType | PeopleGroups_PeopleGroupStandard_BlockType;

export type PeopleGroups_PeopleGroupSmall_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'peopleGroups_peopleGroupSmall_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  groupEntries?: Maybe<Array<Maybe<EntryInterface>>>;
  groupHeading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type PeopleGroups_PeopleGroupSmall_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type PeopleGroups_PeopleGroupSmall_BlockTypeGroupEntriesArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type PeopleGroups_PeopleGroupStandard_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'peopleGroups_peopleGroupStandard_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  groupEntries?: Maybe<Array<Maybe<GroupEntries_SuperTableField>>>;
  groupHeading?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type PeopleGroups_PeopleGroupStandard_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type PeopleGroups_PeopleGroupStandard_BlockTypeGroupEntriesArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type People_Person_Entry = ElementInterface & EntryInterface & {
  __typename?: 'people_person_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  contentBlocks?: Maybe<Array<Maybe<ContentBlocks_MatrixField>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  customLink?: Maybe<Scalars['String']>;
  customNameLink?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  email?: Maybe<Scalars['String']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entryImage?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  firstname?: Maybe<Scalars['String']>;
  function?: Maybe<Scalars['String']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  isNotLinked?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  lastname?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  linkedIn?: Maybe<Scalars['String']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  shortBio?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type People_Person_Entry_CountArgs = {
  field: Scalars['String'];
};


export type People_Person_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type People_Person_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type People_Person_EntryContentBlocksArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type People_Person_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type People_Person_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type People_Person_EntryEntryImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type People_Person_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type People_Person_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type People_Person_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type People_Person_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type People_Person_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type PublicationTopicCategories_Category = CategoryInterface & ElementInterface & {
  __typename?: 'publicationTopicCategories_Category';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The category’s children. */
  children?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  faIcon?: Maybe<Scalars['String']>;
  /** The handle of the group that contains the category. */
  groupHandle?: Maybe<Scalars['String']>;
  /** The ID of the group that contains the category. */
  groupId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<CategoryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent?: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type PublicationTopicCategories_Category_CountArgs = {
  field: Scalars['String'];
};


export type PublicationTopicCategories_CategoryChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type PublicationTopicCategories_CategoryLocalizedArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type PublicationTopicCategories_CategoryNextArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type PublicationTopicCategories_CategoryParentArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type PublicationTopicCategories_CategoryPrevArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type PublicationTypeCategories_Category = CategoryInterface & ElementInterface & {
  __typename?: 'publicationTypeCategories_Category';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The category’s children. */
  children?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The handle of the group that contains the category. */
  groupHandle?: Maybe<Scalars['String']>;
  /** The ID of the group that contains the category. */
  groupId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<CategoryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent?: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type PublicationTypeCategories_Category_CountArgs = {
  field: Scalars['String'];
};


export type PublicationTypeCategories_CategoryChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type PublicationTypeCategories_CategoryLocalizedArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type PublicationTypeCategories_CategoryNextArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type PublicationTypeCategories_CategoryParentArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type PublicationTypeCategories_CategoryPrevArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Publications_Publication_Entry = ElementInterface & EntryInterface & {
  __typename?: 'publications_publication_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  access?: Maybe<Scalars['String']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  authorLabel?: Maybe<Scalars['String']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  contentBlocks?: Maybe<Array<Maybe<ContentBlocks_MatrixField>>>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entryAuthor?: Maybe<Array<Maybe<EntryInterface>>>;
  entryImage?: Maybe<Array<Maybe<AssetInterface>>>;
  entryLead?: Maybe<Scalars['String']>;
  entryPdf?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaKeywords?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  podcastEpisodeId?: Maybe<Scalars['Number']>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  publicationTopic?: Maybe<Array<Maybe<EntryInterface>>>;
  publicationTypeCategories?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Publications_Publication_Entry_CountArgs = {
  field: Scalars['String'];
};


export type Publications_Publication_EntryAccessArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryContentBlocksArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Publications_Publication_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryEntryAuthorArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryEntryImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Publications_Publication_EntryEntryPdfArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Publications_Publication_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryPublicationTopicArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryPublicationTypeCategoriesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Publications_Publication_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type SiteSettings_GlobalSet = ElementInterface & GlobalSetInterface & {
  __typename?: 'siteSettings_GlobalSet';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  activeCampaignDefaultListId?: Maybe<Scalars['Number']>;
  activecampaign?: Maybe<Scalars['Number']>;
  address?: Maybe<Scalars['String']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  checkmarkText?: Maybe<Scalars['String']>;
  confirmationMessage?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  disclaimerText?: Maybe<Scalars['String']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  eventFormText?: Maybe<Scalars['String']>;
  footerNavigation?: Maybe<Array<Maybe<FooterNavigation_MatrixField>>>;
  /** The handle of the global set. */
  handle?: Maybe<Scalars['String']>;
  heartNavigation?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  logoRider?: Maybe<Array<Maybe<LogoRider_MatrixField>>>;
  mainMenu?: Maybe<Array<Maybe<MainMenu_MatrixField>>>;
  metaNavigation?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The name of the global set. */
  name?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  subjectMessage?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type SiteSettings_GlobalSet_CountArgs = {
  field: Scalars['String'];
};


export type SiteSettings_GlobalSetFooterNavigationArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type SiteSettings_GlobalSetHeartNavigationArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type SiteSettings_GlobalSetLogoRiderArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type SiteSettings_GlobalSetMainMenuArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type SiteSettings_GlobalSetMetaNavigationArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type SliderGallery_MatrixField = SliderGallery_Slide_BlockType;

export type SliderGallery_Slide_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'sliderGallery_slide_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  align?: Maybe<Scalars['String']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  image?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the matrix block. */
  ownerId?: Maybe<Scalars['Int']>;
  readmore?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  target?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block's type. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the matrix block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type SliderGallery_Slide_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type SliderGallery_Slide_BlockTypeAlignArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};


export type SliderGallery_Slide_BlockTypeImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type SliderGallery_Slide_BlockTypeTargetArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type Slides_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'slides_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  align?: Maybe<Scalars['String']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  image?: Maybe<Array<Maybe<AssetInterface>>>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the element that owns the Super Table block. */
  ownerId?: Maybe<Scalars['Int']>;
  readmore?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  target?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The ID of the Super Table block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type Slides_BlockType_CountArgs = {
  field: Scalars['String'];
};


export type Slides_BlockTypeAlignArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};


export type Slides_BlockTypeImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Slides_BlockTypeTargetArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type Slides_SuperTableField = Slides_BlockType;

export type Sources_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'sources_BlockType';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  nr?: Maybe<Scalars['Number']>;
  /** The ID of the element that owns the Super Table block. */
  ownerId?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The ID of the Super Table block's type. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};


export type Sources_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Sources_SuperTableField = Sources_BlockType;

export type Steps_TableRow = {
  __typename?: 'steps_TableRow';
  aproxDate?: Maybe<Scalars['String']>;
  col1?: Maybe<Scalars['String']>;
  col2?: Maybe<Scalars['DateTime']>;
  col3?: Maybe<Scalars['String']>;
  completedDate?: Maybe<Scalars['DateTime']>;
  heading?: Maybe<Scalars['String']>;
};

export type TextBlocks_TableRow = {
  __typename?: 'textBlocks_TableRow';
  col1?: Maybe<Scalars['String']>;
  col2?: Maybe<Scalars['String']>;
  col3?: Maybe<Scalars['String']>;
  col4?: Maybe<Scalars['String']>;
  heading?: Maybe<Scalars['String']>;
  linkText?: Maybe<Scalars['String']>;
  linkUrl?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
};

export type Topics_Topics_Entry = ElementInterface & EntryInterface & {
  __typename?: 'topics_topics_Entry';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry's author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children?: Maybe<Array<Maybe<EntryInterface>>>;
  contentBlocks?: Maybe<Array<Maybe<ContentBlocks_MatrixField>>>;
  conversationLanguage?: Maybe<Scalars['String']>;
  /** The current revision for the entry. */
  currentRevision?: Maybe<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  entryImage?: Maybe<Array<Maybe<AssetInterface>>>;
  entryLead?: Maybe<Scalars['String']>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. **This field is deprecated.** `isUnpublishedDraft` should be used instead. */
  isUnsavedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<EntryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaKeywords?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  neuesProjekt?: Maybe<Scalars['Boolean']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry's post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  relatedEvents?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The creator of a given revision. */
  revisionCreator?: Maybe<UserInterface>;
  /** The revisions for the entry. */
  revisions?: Maybe<Array<Maybe<EntryInterface>>>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The handle of the section that contains the entry. */
  sectionHandle?: Maybe<Scalars['String']>;
  /** The ID of the section that contains the entry. */
  sectionId?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  statusTopic?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  topicsCategory?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle?: Maybe<Scalars['String']>;
  /** The ID of the entry type that contains the entry. */
  typeId?: Maybe<Scalars['Int']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Topics_Topics_Entry_CountArgs = {
  field: Scalars['String'];
};


export type Topics_Topics_EntryAncestorsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryChildrenArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryContentBlocksArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Topics_Topics_EntryDescendantsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryDraftsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryEntryImageArgs = {
  archived?: InputMaybe<Scalars['Boolean']>;
  caption?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lightbox?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkto?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  source?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};


export type Topics_Topics_EntryLocalizedArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryNextArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryParentArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryPrevArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryRelatedEventsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryRevisionsArgs = {
  access?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  activateBubble?: InputMaybe<Scalars['Boolean']>;
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorLabel?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  bubbleText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  conversationLanguage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  customNameLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateEnd?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateStart?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  email?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  entryAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLead?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryLeadRedactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  entryPdf?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  eventTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  function?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  isNotLinked?: InputMaybe<Scalars['Boolean']>;
  lastname?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkedIn?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  location?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  locationLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaKeywords?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  neuesProjekt?: InputMaybe<Scalars['Boolean']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  numberOfParticipants?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  pageTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  participantsCustomText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  peopleEntries?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  podcastEpisodeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  publicationTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  publicationTypeCategories?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedEvents?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  revisionCreator?: InputMaybe<Scalars['Int']>;
  revisionId?: InputMaybe<Scalars['Int']>;
  revisionOf?: InputMaybe<Scalars['QueryArgument']>;
  revisions?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortBio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  statusTopic?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  target?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  textContent?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topicsCategory?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  webLink?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryStatusTopicArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};


export type Topics_Topics_EntryTopicsCategoryArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Topicskategorien_Category = CategoryInterface & ElementInterface & {
  __typename?: 'topicskategorien_Category';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The category’s children. */
  children?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  faIcon?: Maybe<Scalars['String']>;
  /** The handle of the group that contains the category. */
  groupHandle?: Maybe<Scalars['String']>;
  /** The ID of the group that contains the category. */
  groupId?: Maybe<Scalars['Int']>;
  /** The id of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized?: Maybe<Array<Maybe<CategoryInterface>>>;
  metaDescription?: Maybe<Scalars['String']>;
  metaTitle?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent?: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['String']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element's status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The uid of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};


export type Topicskategorien_Category_CountArgs = {
  field: Scalars['String'];
};


export type Topicskategorien_CategoryChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topicskategorien_CategoryLocalizedArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topicskategorien_CategoryNextArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topicskategorien_CategoryParentArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};


export type Topicskategorien_CategoryPrevArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  archived?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  enabledForSite?: InputMaybe<Scalars['Boolean']>;
  faIcon?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  metaDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  metaTitle?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  trashed?: InputMaybe<Scalars['Boolean']>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};
